//SUBSET SUM PROBLEM WITH TIME COMPLEXITY  
#include <stdio.h>
#include<time.h>
void findSubset(int set[], int subset[], int n, int index, int target, int currentSum) {
if (currentSum == target) {
printf("Subset found: ");
for (int i = 0; i < index; i++) {
printf("%d ", subset[i]);
}
printf("\n");
return;
}
if (currentSum > target || n == 0) {
return;
}
subset[index] = set[0];
findSubset(set + 1, subset, n - 1, index + 1, target, currentSum + set[0]);
findSubset(set + 1, subset, n - 1, index, target, currentSum);
}
int main() {
int n, target;
clock_t start,end;
double cpu_time_used;
printf("Enter the number of elements in the set: ");
scanf("%d", &n);
start=clock();
end=clock();    
int set[n], subset[n];
printf("Enter the elements of the set: ");
for (int i = 0; i < n; i++) {
scanf("%d", &set[i]);
}
printf("Enter the target sum: ");
scanf("%d", &target);
printf("Subsets with sum %d:\n", target);
findSubset(set, subset, n, 0, target, 0);
cpu_time_used=((double)(end - start)) / CLOCKS_PER_SEC;
printf("Execution time :%f seconds",cpu_time_used);
return 0;
}
